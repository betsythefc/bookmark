#!/bin/bash

# Setup bookmark folder and config file
if [[ "$1" == "init" ]]
then
  if [ -d $HOME/.bookmark-store ]
  then
    echo -n "$HOME/.bookmark-store folder already exists, overwrite? (y/N): "
    read overwriteStore
    if [[ "$overwriteStore" == "y" ]]
    then
      echo "Removing old directory..."
      rm -rf $HOME/.bookmark-store
      echo -n "Enter location for bookmark store (Default: $HOME/.bookmark-store): "
      read storeDir
      if [[ "$newLocation" == "" ]]
      then
        storeDir=$HOME/.bookmark-store
      fi
      mkdir $storeDir
    fi
  else
    echo -n "Enter location for bookmark store (Default: $HOME/.bookmark-store): "
    read storeDir
    if [[ "$newLocation" == "" ]]
    then
      storeDir=$HOME/.bookmark-store
    fi
    mkdir $storeDir
  fi

  if [ -f $HOME/.bookmark.conf.yaml ]
  then
    echo -n "$HOME/.bookmark.conf.yaml already exists, overwrite? (y/N): "
    read overwriteConfig
    if [[ "$overwriteConfig" == "y" ]]
    then
      rm $HOME/.bookmark.conf.yaml
      echo "storeDirectory: $storeDir" >> $HOME/.bookmark.conf.yaml
      
      os=$(sw_vers -productName)
      if [[ "$os" == "Mac OS X" ]]
      then
        echo "os: macos" >> $HOME/.bookmark.conf.yaml
      fi
    fi 
  else
    echo "storeDirectory: $storeDir" >> $HOME/.bookmark.conf.yaml
    os=$(sw_vers -productName)
    if [[ "$os" == "Mac OS X" ]]
    then
      echo "os: macos" >> $HOME/.bookmark.conf.yaml
    fi
  fi
  exit 0
fi

# Presets
configFile="$HOME/.bookmark.conf.yaml"
storeDirectory=$(grep "storeDirectory" $configFile | awk -F": " '{ print $2 }')
os=$(grep "os" $configFile | awk -F": " '{ print $2 }')
open=0
view=0
list=0
pass=0

# Check if pass is available
if [[ "$(grep pass $configFile | awk -F": " '{ print $2 }')" == "installed" ]]
then
  passInstalled=1
else
  passTest=$(pass --help)
  if [[ "$passTest" != "-bash: pass: command not found" ]]
  then
    passInstalled=1
    echo "pass: installed" >> $configFile
  fi
fi

while getopts b:c:hlopv o
do
  case "$o" in
    b) bookmark="$storeDirectory/${OPTARG}.yaml"
    url=$(grep "url" $bookmark | awk -F": " '{ print $2 }')
    ;;
    c) newBookmarkArg="${OPTARG}"
    newBookmark="$(echo $newBookmarkArg | awk -F"/" '{ print $NF }').yaml" 
    newBookmarkPathArr=($(echo $newBookmarkArg | sed 's/\// /g'))
    unset 'newBookmarkPathArr[${#newBookmarkPathArr[@]}-1]'
    currentPath=$storeDirectory
    for i in ${newBookmarkPathArr[@]}
    do
      if [ ! -d "$currentPath/$i" ]
      then
        mkdir $currentPath/$i
      fi
      currentPath="$currentPath/$i"
    done
    echo -n "url: "
    read newURL
    echo "url: $newURL" > $currentPath/$newBookmark
    echo -n "browser: "
    read newBrowser
    if [[ "newBrowser" != "" ]]
    then
      echo "browser: $newBrowser" >> $currentPath/$newBookmark
    fi
    if [[ $passInstalled -eq 1 ]]
    then
      echo -n "pass path: "
      read newPass
      if [[ "$newPass" != "" ]]
      then
        echo "pass: $newPass" >> $cureentPath/$newBookmark
      fi
    fi
    echo -e "$newURL\n$newBrowser\n$newPass" > $currentPath/$newBookmark
    echo "Added $currentPath/$newBookmark to the bookmark store"
    exit 0
    ;;
    h) echo -e "bookmark, version 0.1\n\nusage: bookmark [-b bookmark path] [-hlopv]\n\n  h : Displays this help section\n  l : Shows a tree of all bookmarks in the store.\n  o : Open the bookmark in the browser specified in the bookmakr YAML file or the default browser if that is not set.\n  p : If pass is installed and the path to the pass file for this site is in the bookmark YAML file, this will copy the password.\n  v : View the url\n" 
    ;;
    l) list=1;;
    o) open=1;;
    p) pass=1;;
    v) view=1;;
  esac
done

# Opens URL in browser specified in the config file or in the bookmark file
if [[ $open -eq 1 ]]
then
  browser=$(sed -n -e "/browser/,/  $os/p" $bookmark | grep "$os" | awk -F ": " '{ print $2 }')
# browser=$(grep "browser" $bookmark | awk -F": " '{ print $2 }')
  # Check to use default browser
  if [ "$browser" == "" ]
  then
    browser=$(grep "browser" $configFile | awk -F": " '{ print $2 }')
  fi
  
  if [[ "$os" == "macos" ]]
  then
    open -a "$browser" $url 
  fi
fi

# Send url to stdout
if [[ $view == 1 ]]
then
  echo $url
fi

if [[ $pass -eq 1 ]]
then
  password=$(grep "pass" $bookmark | awk -F": " '{ print $2 }' | sed "s/\'//g")
  if [[ "$password" == "" ]]
  then
    echo "No password path has been assigned in the file."
  else
    pass -c "$password"
  fi
fi

if [[ $list -eq 1 ]]
then
  tree $storeDirectory | sed "s/.yaml//g" | sed '$ d' | sed '$ d'
fi
